openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /accounts:
    post:
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: "#/components/schemas/CreateAccount"

      responses:
        "202":
          description: Request accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEnvelope"

  /accounts/{accountId}/members:
    post:
      operationId: createAccountMember
      parameters:
        - $ref: "#/components/parameters/accountId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountMember"

      responses:
        "202":
          description: Request accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEnvelope"

  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  parameters:
    accountId:
      in: path
      name: accountId
      schema:
        type: integer
        format: int64
        minimum: 0
        exclusiveMinimum: true
      required: true

  schemas:
    NewResourceEnvelope:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/NewData"
      required:
        - data

    NewData:
      type: object
      properties:
        type:
          type: string
        attributes:
          $ref: "#/components/schemas/Attributes"
      required:
        - type

    Attributes:
      type: object


    CreateAccount:
      allOf:
        - $ref: "#/components/schemas/NewResourceEnvelope"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/AccountRegistration"

    AccountRegistration:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          default: null
        attributes:
          $ref: "#/components/schemas/AccountRegistrationAttributes"
      required:
        - attributes

    AccountRegistrationAttributes:
      type: object
      properties:
        ownerEmail:
          type: string
          format: email
      required:
        - ownerEmail


    CreateAccountMember:
      allOf:
        - $ref: "#/components/schemas/NewResourceEnvelope"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/AccountMemberRegistration"

    AccountMemberRegistration:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          default: null
        attributes:
          $ref: "#/components/schemas/AccountMemberRegistrationAttributes"
      required:
        - attributes

    AccountMemberRegistrationAttributes:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email

    ResponseEnvelope:
      type: object
      properties:
        data:
          type: object
      required:
        - data

    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
